{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timer","setInterval","console","log","toLocaleTimeString","setState","this","lastProps","name","props","clearInterval","React","Component","App","isClockVisible","clockName","setRandomName","Math","ceil","random","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,MAAQC,aAAY,WAElBC,QAAQC,IAAI,EAAKN,MAAMC,KAAKM,sBAE5B,EAAKC,SAAS,CAAEP,KAAM,IAAIC,SACzB,KAVL,uDAYE,WACE,OAAOO,KAAKN,QAbhB,gCAgBE,SAAmBO,GACbA,EAAUC,OAASF,KAAKG,MAAMD,MAEhCN,QAAQC,IAAR,qCAA0CI,EAAUC,KAApD,eAA+DF,KAAKG,MAAMD,SAnBhF,kCAuBE,WACEE,cAAcJ,KAAKN,SAxBvB,oBA2BE,WACE,IAAQQ,EAASF,KAAKG,MAAdD,KACAV,EAASQ,KAAKT,MAAdC,KAER,OACE,qCACE,4CACYU,KAEZ,8CACA,8BAAMV,EAAKM,8BArCnB,GAA2BO,IAAMC,WCApBC,G,MAAb,4MACEhB,MAAe,CACbiB,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,cAAgB,WACd,EAAKX,SAAS,CAAEU,UAAWE,KAAKC,KAAqB,GAAhBD,KAAKE,aAP9C,EAUEC,UAAY,WACV,EAAKf,SAAS,CAAES,gBAAgB,KAXpC,EAcEO,UAAY,WACV,EAAKhB,SAAS,CAAES,gBAAgB,KAfpC,4CAkBE,WACE,MAAsCR,KAAKT,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAChBK,EAAwCd,KAAxCc,UAAWC,EAA6Bf,KAA7Be,UAAWL,EAAkBV,KAAlBU,cAE9B,OACE,sBAAKM,UAAU,MAAf,UACE,6CACA,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,qBACVE,QAASJ,EAHX,wBAQA,wBACEG,KAAK,SACLD,UAAU,sBACVE,QAASH,EAHX,wBAQA,wBACEE,KAAK,SACLD,UAAU,cACVE,QAASR,EAHX,gCAQDF,GAAkB,cAAC,EAAD,CAAON,KAAMO,WAlDxC,GAAyBJ,IAAMC,YCP/Ba,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.307f1e1f.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\ntype LastName = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    time: new Date(),\n  };\n\n  timer = setInterval(() => {\n    // eslint-disable-next-line no-console\n    console.log(this.state.time.toLocaleTimeString());\n\n    this.setState({ time: new Date() });\n  }, 1000);\n\n  componentDidMount() {\n    return this.timer;\n  }\n\n  componentDidUpdate(lastProps: LastName): void {\n    if (lastProps.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${lastProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <>\n        <p>\n          {`Name: ${name}`}\n        </p>\n        <p>Current time:</p>\n        <div>{time.toLocaleTimeString()}</div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  setRandomName = () => {\n    this.setState({ clockName: Math.ceil(Math.random() * 10) });\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n    const { showClock, hideClock, setRandomName } = this;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button button-show\"\n            onClick={showClock}\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\" button button-hide\"\n            onClick={hideClock}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button-name\"\n            onClick={setRandomName}\n          >\n            Set random name\n          </button>\n        </div>\n        {isClockVisible && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}