{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","setInterval","toLocaleTimeString","console","log","setState","this","clearInterval","name","props","React","Component","App","isClockVisible","clockName","setRandomName","oldClockName","Math","ceil","random","setTimeout","showClock","hideClock","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,YAAcA,aAAY,WACxB,EAAKH,MAAMC,KAAKG,qBAGhBC,QAAQC,IAAI,EAAKN,MAAMC,KAAKG,sBAE5B,EAAKG,SAAS,CAAEN,KAAM,IAAIC,SACzB,KAZL,uDAcE,WACE,OAAOM,KAAKL,cAfhB,kCAkBE,WACEM,cAAcD,KAAKL,eAnBvB,oBAsBE,WACE,IAAQO,EAASF,KAAKG,MAAdD,KACAT,EAASO,KAAKR,MAAdC,KAER,OACE,qCACE,4CACYS,KAEZ,8CACA,8BAAMT,EAAKG,8BAhCnB,GAA2BQ,IAAMC,WCIpBC,G,MAAb,4MACEd,MAAe,CACbe,gBAAgB,EAChBC,UAAW,GAHf,EAMEC,cAAgB,WACd,IAAMC,EAAe,EAAKlB,MAAMgB,UAEhC,EAAKT,SAAS,CAAES,UAAWG,KAAKC,KAAqB,GAAhBD,KAAKE,YAG1CC,YAAW,kBAAMjB,QAAQC,IAAR,qCAA0CY,EAA1C,eAA6D,EAAKlB,MAAMgB,cAAc,IAZ3G,EAeEO,UAAY,WACV,EAAKhB,SAAS,CAAEQ,gBAAgB,KAhBpC,EAmBES,UAAY,WACV,EAAKjB,SAAS,CAAEQ,gBAAgB,KApBpC,4CAuBE,WACE,MAAsCP,KAAKR,MAAnCe,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAChBO,EAAwCf,KAAxCe,UAAWC,EAA6BhB,KAA7BgB,UAAWP,EAAkBT,KAAlBS,cAE9B,OACE,sBAAKQ,UAAU,MAAf,UACE,6CACA,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAU,qBACVE,QAASJ,EAHX,wBAQA,wBACEG,KAAK,SACLD,UAAU,sBACVE,QAASH,EAHX,wBAQA,wBACEE,KAAK,SACLD,UAAU,cACVE,QAASV,EAHX,gCAQDF,GAAkB,cAAC,EAAD,CAAOL,KAAMM,WAvDxC,GAAyBJ,IAAMC,YCP/Be,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f71dd4a1.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    time: new Date(),\n  };\n\n  setInterval = setInterval(() => {\n    this.state.time.toLocaleTimeString();\n\n    // eslint-disable-next-line no-console\n    console.log(this.state.time.toLocaleTimeString());\n\n    this.setState({ time: new Date() });\n  }, 1000);\n\n  componentDidMount() {\n    return this.setInterval;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.setInterval);\n  }\n\n  render() {\n    const { name } = this.props;\n    const { time } = this.state;\n\n    return (\n      <>\n        <p>\n          {`Name: ${name}`}\n        </p>\n        <p>Current time:</p>\n        <div>{time.toLocaleTimeString()}</div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\ntype State = {\n  isClockVisible: boolean;\n  clockName: number;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  setRandomName = () => {\n    const oldClockName = this.state.clockName;\n\n    this.setState({ clockName: Math.ceil(Math.random() * 10) });\n\n    // eslint-disable-next-line no-console\n    setTimeout(() => console.log(`The Clock was renamed from ${oldClockName} to ${this.state.clockName}`), 0);\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n    const { showClock, hideClock, setRandomName } = this;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button button-show\"\n            onClick={showClock}\n          >\n            Show Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\" button button-hide\"\n            onClick={hideClock}\n          >\n            Hide Clock\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button-name\"\n            onClick={setRandomName}\n          >\n            Set random name\n          </button>\n        </div>\n        {isClockVisible && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}